# =========================================================================
# QUICKSTART: server configuration (see reference.conf for details)
# =========================================================================

/* server name and administration info */
global {
    name    not.configured;         # IRC name of the server
    info    "located on earth";     # A short info line
    admin {
        "An unconfigured server";   # Three information lines sent
        "An unknown administrator"; # in reply to ADMIN command
        "email@somewhere.earth";
    };
};

/* server options */
options {
    network_name    unconfigured;   # A name is needed even if not linked
    local_kline     admin@server;   # Contact email for server bans
    show_links;                     # Show servers in LINKS
    allow_split_ops;                # Give ops in empty channels
    allow_remote_rehash;            # Accept rehash sent from remote server

    // use these options when services is on the network
    services_name   services.name;  # Name of services (NS/CS/MS/RS) server
    stats_name      stats.name;     # Name of stats (OS/SS/HS) server
    network_kline   admin@net;      # Contact email for network bans
    nshelpurl       "http://help";  # Nick registration help page
    spamfilterurl   "http://help";  # SpamFilter help page

    // if you need to link more than 1 server, uncomment the following line
    # servtype        hub;
};

/* where to listen for connections */
port {
    port    6667;         # Port to listen on
    bind    127.0.0.1;    # IP address to listen on
    flags   S;            # allow SSL connections on this port
};

/* more listening ports */
port { port 6668; bind 127.0.0.1; };
port { port 6669; bind 127.0.0.1; };
port { port 7000; bind 127.0.0.1; };

/* allow clients to connect */
allow {
    host    *@*;    # Allow anyone
    class   users;  # Place them in the users class
};

/* connection class for users */
class {
    name        users;      # Class name
    maxusers    100;        # Maximum connections
    pingfreq    90;         # Check idle connections every N seconds
    maxsendq    100000;     # 100KB send buffer limit
};

/* connection class for server operators */
class {
    name        opers;
    pingfreq    90;
    maxsendq    500000;     # 500KB limit for opers
};

/* the server administrator */
oper {
    name    admin;          # Username
    passwd  secret;         # Password
    access  OAaRD;          # Server Administrator
    host    *@192.168.0.*;  # Must be connecting from here
    host    *@10.64.64.*;   # Or from here
    // insert other other hostmasks here
    class   opers;          # Belongs in the opers class
};

/* for services */
super {
    "services.name";
    "stats.name";
    // insert any other special servers here
};

/* reserved nicknames */
restrict { type nick; mask "NickServ"; reason "reserved for services"; };
restrict { type nick; mask "ChanServ"; reason "reserved for services"; };
restrict { type nick; mask "MemoServ"; reason "reserved for services"; };
restrict { type nick; mask "RootServ"; reason "reserved for services"; };
restrict { type nick; mask "OperServ"; reason "reserved for services"; };
restrict { type nick; mask "StatServ"; reason "reserved for services"; };
restrict { type nick; mask "HelpServ"; reason "reserved for services"; };
restrict { type nick; mask "services"; reason "reserved for services"; };


/* === these next two blocks are for linking to a hub === */

/* class for uplink hub */
class {
    name        hub;
    pingfreq    120;        # Idle check every 2 minutes
    connfreq    300;        # Try autoconnect every 5 minutes
    maxsendq    1000000;    # 1MB send queue
    maxlinks    1;          # Autoconnect to only 1 hub at a time
};

/* our uplink hub */
connect {
    name        hub.name;   # Hub's IRC name
    host        172.16.4.2; # Hub's IP address
    port        7325;       # Autoconnect to hub's port 7325
    bind        127.0.0.1;  # We connect from this IP
    apasswd     secret;     # We accept this password from hub
    cpasswd     secret;     # We send this password to hub
    flags       H;          # It is a hub
    class       hub;        # Use hub class
};


/* === these next two blocks are for linking to services === */

/* class for services */
class {
    name        services;
    pingfreq    60;         # Idle check every minute
    maxsendq    5000000;    # 5MB backlog buffer
};

/* our services */
connect {
    name        services.name;  # Services' IRC name
    host        127.0.0.1;      # IP address services connects from
    apasswd     secret;         # Password services sends
    cpasswd     secret;         # Same password
    class       services;
};
